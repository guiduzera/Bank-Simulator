version: '3.9'
services:
  frontend:
    networks:
      - default
    container_name: app_frontend
    build: ./frontend
    ports:
      - 3000:3000
    platform: linux/x86_64
    working_dir: /app-frontend
    depends_on:
      backend:
        condition: service_healthy
    # Os `healthcheck` devem garantir que a aplicação
    # está operacional, antes de liberar o container
    healthcheck:
      test: ["CMD", "lsof", "-t", "-i:3000"]  # Caso utilize outra porta interna para o front, altere ela aqui também
      timeout: 10s
      retries: 5
  backend:
    networks:
      - ng_cash
    working_dir: /app-backend
    container_name: app_backend
    build: ./backend
    ports:
      - 3001:3001
    platform: linux/x86_64
    volumes:
      - ./backend:/app-backend
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "lsof", "-t", "-i:3001"] # Caso utilize outra porta interna para o back, altere ela aqui também
      timeout: 10s
      retries: 5
    environment:
      # variaveis de ambiente
      - DATABASE_URL=postgres://postgres:password@database:5432/ng_cash?schema=public
      - APP_PORT=3001
      - JWT_SECRET=jwt_secret
  db:
    platform: linux/x86_64
    networks:
      - ng_cash
    healthcheck:
      test:  ["CMD", "pg_isready", "-U", "postgres"]
      timeout: 10s
      retries: 5
    cap_add:
      - SYS_NICE # Deve omitir alertas menores
    # nome do serviço
    image: postgres:13
    # imagem do postgres
    container_name: database
    # nome do container
    volumes:
      - ./:/app
      # mapeia o diretorio local para o diretorio de trabalho
    ports:
      - 5432:5432
      # mapeia a porta 5432 do container para a porta 5432 do host
    environment:
      # variaveis de ambiente
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=postgres
      - POSTGRES_DB=ng_cash
    restart: 'always'
    # reinicia o container sempre que ele parar

networks:
  ng_cash:
    name: ng_cash